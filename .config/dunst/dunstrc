[global]

#> display

# display notification on focused monitor
# possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# 'keyboard' needs a window manager that exports _NET_ACTIVE_WINDOW
#
# this option overrides the monitor option
follow = mouse


#> geometry

# dynamic width from 0 to 300
width = 270

# maximum height of a notification (excluding frame)
height = 200

# position the notification in the top right corner
origin = top-right

# offset from the origin
offset = 24x68

# scale, auto-detected if value is 0
scale = 0

# maximum number of notifications (0 means no limit)
notification_limit = 10

# show how many messages are currently hidden (by notification_limit)
indicate_hidden = yes

# transparency of the window (0 - 100)
# requires a compositor (X11 only)
transparency = 18

# padding between text & separator
padding = 16
horizontal_padding = 16

# width in pixels of frame around notification window
# use 0 to disable
frame_width = 2
frame_color = "#e5c07c"

# sort messages by urgency
sort = yes

# don't remove messages if user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds
# use 0 to disable
# clients setting 'transient' hint will bypass this
idle_threshold = 120


#> text

# set the font
font = "IBM Plex Mono 9"

# spacing between lines
# if smaller than font height, defaults to font height
line_height = 0

# possible values are:
# full: allow a small subset of html markup in notifications:
#        <b>bold</b>
#        <i>italic</i>
#        <s>strikethrough</s>
#        <u>underline</u>
# for a complete reference see https://docs.gtk.org/Pango/pango_markup.html
#
# strip: compatibility mode for clients that send markup even though it's
#        not enabled on the server. dunst will try to strip the markup
#        but the parsing is simplistic
#
# no:    disable markup parsing, incoming notifications will be treated as
#        plain text. dunst will not advertise that it has the body-markup
#        capability if this is set as a global setting
#
# it's important to note that markup inside the format option will be parsed
# regardless of what this is set to.
markup = full

# the format of the message
# possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  literal %
# markup is allowed
format = "<b>%a</b>\n%s"

# possible values are:
#   left
#   center
#   right
alignment = left

# possible values are:
#   top
#   center
#   bottom
vertical_alignment = center

# show age of message if message is older than
# show_age_threshold seconds
# use -1 to disable
show_age_threshold = 120

# specify where to make an ellipsis in long lines
# possible values are:
#   start
#   middle
#   end
ellipsize = end

# ignore '\n' in notification
ignore_newline = no

# merge notifications with same content
stack_duplicates = true

# hide count when stacking duplicates
hide_duplicate_count = false

# indicators for URLs (U) and actions (A)
show_indicators = yes


#> icons

# align icon
# possible values are:
#   left
#   right
#   top
#   off
icon_position = left

# scale small icons up to this size
# use 0 to disable
# in case of conflict, max_icon_size takes precedence
min_icon_size = 0

# scale down larger icons
# use 0 to disable
max_icon_size = 40

# paths to default icons
icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/


#> history

# sticky notifications popped up from history (or timeout as normal)
sticky_history = no

# max amount of notifications to keep in history
history_length = 100


#> misc

# launcher command
dmenu = rofi -dmenu

# web browser command
browser = gnome-open

# always run rule-defined scripts, even if notification is suppressed
always_run_script = false

# title for spawned windows
title = Dunst

# class for spawned windows
class = Dunst

# corner radius of notification window in pixel size
# if 0, no rounded corners
# radius will automatically be lowered if exceeds half the
# notification height to avoid clipping
corner_radius = 16

# ignore dbus closeNotification message
# useful to enforce timeout set by dunst config, without this
# an application can close the notification send before the
# user defined timeout
ignore_dbusclose = false


#> legacy

# use xinerama over RandR for multi-monitor
#
# NOTE: enabling this breaks monitor connect/disconnect detection
#       and follow mode
force_xinerama = false


#> mouse

# possible values are:
#   none:          don't do anything
#   do_action:     invoke the action determined by the action_name rule
#                  if no action, open context menu
#   open_url:      if notification has a single url, open it
#                  if multiple urls, open context menu
#   close_current: close current notification
#   close_all:     close all notifications
#   context:       open context menu for notification
#   context_all:   open context menu for all notifications
#
# values can be strung together (csv) for each mouse event, and
# will get executed in sequence
mouse_left_click = do_action, close_current
mouse_middle_click = close_current
mouse_right_click = context


[experimental]
per_monitor_dpi = false


[urgency_low]
background = "#101114"
foreground = "#c8ccd5"
timeout = 10

[urgency_normal]
background = "#101114"
foreground = "#c8ccd5"
timeout = 10

[urgency_critical]
background = "#e06c75"
foreground = "#101114"
timeout = 0
icon = abrt
